<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UModbus.Client</name>
    </assembly>
    <members>
        <member name="T:UModbus.Client.RequestStatus">
            <summary>
            Статус ответа на modbus запрос
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.Valid">
            <summary>
            Ошибок не обнаружено.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.IllegalFunction">
            <summary>
            Стандарный код ошибки протокола modbus. Функция запроса не поддерживается устройством.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.IllegalDataAddress">
            <summary>
            Стандарный код ошибки протокола modbus. Некорректный для устройства начальный адрес флага/регистра.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.IllegalDataValue">
            <summary>
            Стандарный код ошибки протокола modbus. Значение, содержащееся в поле данных запроса, не является допустимым.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.SlaveDeviceFailure">
            <summary>
            Стандарный код ошибки протокола modbus. Произошла неисправимая ошибка, когда slave пытался выполнить запрошенное действие.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.Acknowledge">
            <summary>
            Стандарный код ошибки протокола modbus. Slave принял запрос и обрабатывает его, но ответные данные будут готовы через продолжительный период времени.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.SlaveDeviceBusy">
            <summary>
            Стандарный код ошибки протокола modbus. Slave занимается обработкой длительной команды. Клиент должен повторно передать сообщение позже.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.MemoryParityError">
            <summary>
            Стандарный код ошибки протокола modbus. Slave попытался прочитать запись из файла, но обнаружил ошибку четности в памяти.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.GateWayPathUnavailable">
            <summary>
            Стандарный код ошибки протокола modbus. Обычно означает, что шлюз настроен неправильно или перегружен.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.GateWayTargetFailed">
            <summary>
            Стандарный код ошибки протокола modbus. Указывает на то, что ответ не был получен от Slave устройство. 
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.ResponseLengthInvalid">
            <summary>
            Получен пакет меньшей длины чем минимально возможная.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.DifferentSlaveAddress">
            <summary>
            Получен ответ от другого устройства.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.DifferentFunction">
            <summary>
            Получен ответ на другой запрос.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.DifferentSubFunction">
            <summary>
            Получен ответ на другой запрос.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.DataLengthInvalid">
            <summary>
            Получен пакет с длиной блока данных меньшей минимально возможной.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.DifferentWriteAddress">
            <summary>
            Получен ответ с другим начальным адресом флага/регистра.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.IpPacketLengthInvalid">
            <summary>
            Получен IP пакет меньшей длины чем минимально возможная.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.IpDifferentTransaction">
            <summary>
            Получен ответ с другим идентификатором IP транзакции.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.IpDifferentProtocol">
            <summary>
            Получен ответ с другим типом протокола.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.IpDataLengthInvalid">
            <summary>
            Получен пакет с длиной блока данных меньшей минимально возможной.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.SerialBadCheckSum">
            <summary>
            Некорректная контрольная сумма ответного пакета.
            </summary>      
        </member>
        <member name="F:UModbus.Client.RequestStatus.SerialPortError">
            <summary>
            Ошибка при передаче через последовательный порт.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.SerialLengthInvalid">
            <summary>
            Получен пакет меньшей длины чем минимально возможная.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.AsciiMissingStartMark">
            <summary>
            В полученом ответном ASCII пакете отсутствует стартовая последовательность.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.AsciiMissingStopMark">
            <summary>
            В полученом ответном ASCII пакете отсутствует стоповая последовательность.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.AsciiIllegalSymbol">
            <summary>
            В полученом ответном ASCII пакете обнаружен недопустимый символ.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.TcpNoConnection">
            <summary>
            Ошибка TCP подключения.
            </summary>        
        </member>
        <member name="F:UModbus.Client.RequestStatus.TcpNetworkError">
            <summary>
            Ошибка передачи/приема пакета TCP/IP.
            </summary>
        </member>
        <member name="F:UModbus.Client.RequestStatus.UdpNetworkError">
            <summary>
            Ошибка передачи/приема пакета UDP/IP.
            </summary>
        </member>
        <member name="T:UModbus.Client.BitResponse">
            <summary>
            Тип ответа на запрос чтения флагов.
            </summary>
        </member>
        <member name="F:UModbus.Client.BitResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.BitResponse.Raw">
            <summary>
            Сырые данные.
            </summary>
        </member>
        <member name="F:UModbus.Client.BitResponse.Data">
            <summary>
            Массив считанных значений флагов.
            </summary>
        </member>
        <member name="T:UModbus.Client.WordResponse">
            <summary>
            Тип ответа на запрос чтения регистров.
            </summary>
        </member>
        <member name="F:UModbus.Client.WordResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.WordResponse.Raw">
            <summary>
            Сырые данные.
            </summary>
        </member>
        <member name="F:UModbus.Client.WordResponse.Data">
            <summary>
            Массив считанных значений регистров. 
            </summary>
        </member>
        <member name="T:UModbus.Client.ByteResponse">
            <summary>
            Тип не структурированного ответа на запрос.
            </summary>
        </member>
        <member name="F:UModbus.Client.ByteResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.ByteResponse.Data">
            <summary>
            Сырые данные из ответного пакета.
            </summary>
        </member>
        <member name="T:UModbus.Client.IdResponse">
            <summary>
            Тип ответа на запрос чтения DeviceIdentification (FC43).
            </summary>
        </member>
        <member name="F:UModbus.Client.IdResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.IdResponse.ProductId">
            <summary>
            Идентификатор продукта.
            </summary>
        </member>
        <member name="F:UModbus.Client.IdResponse.ConformityLevel">
            <summary>
            Уровень представления
            </summary>
        </member>
        <member name="F:UModbus.Client.IdResponse.Objects">
            <summary>
            Массив строк описания устройства.
            </summary>
        </member>
        <member name="M:UModbus.Client.IdResponse.ToString">
            <summary>
            Возвращает строковое представление.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UModbus.Client.WriteResponse">
            <summary>
            Тип ответа на запрос записи.
            </summary>
        </member>
        <member name="F:UModbus.Client.WriteResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.WriteResponse.Recorded">
            <summary>
            Количество записанных флагов/регистров.
            </summary>
        </member>
        <member name="T:UModbus.Client.ExceptionResponse">
            <summary>
            Тип ответа на запрос чтения ExceptionStatus (FC07).
            </summary>
        </member>
        <member name="F:UModbus.Client.ExceptionResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.ExceptionResponse.ExceptionCode">
            <summary>
            Код ошибки.
            </summary>
        </member>
        <member name="T:UModbus.Client.StatusResponse">
            <summary>
            Тип ответа на запрос состояния (FC11).
            </summary>
        </member>
        <member name="F:UModbus.Client.StatusResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.StatusResponse.StatusWord">
            <summary>
            Слово состояния.
            </summary>
        </member>
        <member name="F:UModbus.Client.StatusResponse.EventCount">
            <summary>
            Количество записей в журнале событий.
            </summary>
        </member>
        <member name="T:UModbus.Client.EventLogResponse">
            <summary>
            Тип ответа на запрос записи журнала (FC12).
            </summary>
        </member>
        <member name="F:UModbus.Client.EventLogResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.EventLogResponse.StatusWord">
            <summary>
            Слово состояния.
            </summary>
        </member>
        <member name="F:UModbus.Client.EventLogResponse.EventCount">
            <summary>
            Количество записей в журнале событий.
            </summary>
        </member>
        <member name="F:UModbus.Client.EventLogResponse.MessageCount">
            <summary>
            Количество сообщений.
            </summary>
        </member>
        <member name="F:UModbus.Client.EventLogResponse.Events">
            <summary>
            до 64-х однобайтовых записей о событиях.
            </summary>
        </member>
        <member name="T:UModbus.Client.FileRecordSubReq">
            <summary>
            Тип элемента запроса чтения записей из файла (FC20).
            </summary>
        </member>
        <member name="F:UModbus.Client.FileRecordSubReq.File">
            <summary>
            Номер файла.
            </summary>
        </member>
        <member name="F:UModbus.Client.FileRecordSubReq.Record">
            <summary>
            Номер записи в выбранном файле.
            В файле может быть до 10000 записей (0-9999).
            </summary>
        </member>
        <member name="F:UModbus.Client.FileRecordSubReq.Length">
            <summary>
            Длина записи.
            </summary>
        </member>
        <member name="T:UModbus.Client.FileRecordResponse">
            <summary>
            Тип ответа на чтение записей из файла (FC20)
            </summary>
        </member>
        <member name="F:UModbus.Client.FileRecordResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.FileRecordResponse.Raw">
            <summary>
            Сырые данные.
            </summary>
        </member>
        <member name="F:UModbus.Client.FileRecordResponse.Records">
            <summary>
            Массив считанных значений записей.
            </summary>
        </member>
        <member name="T:UModbus.Client.FileRecord">
            <summary>
            Тип записи для записи в файл (FC21)
            </summary>
        </member>
        <member name="F:UModbus.Client.FileRecord.File">
            <summary>
            Номер файла.
            </summary>
        </member>
        <member name="F:UModbus.Client.FileRecord.Record">
            <summary>
            Номер записи в выбранном файле.
            В файле может быть до 10000 записей (0-9999).
            </summary>
        </member>
        <member name="F:UModbus.Client.FileRecord.Data">
            <summary>
            Данные записи.
            </summary>
        </member>
        <member name="T:UModbus.Client.ModbusClient">
            <summary>
            Базовый класс Modbus-клиента.
            Реализует взаимодействие с подчиненными устройствами
            по протоколу Modbus.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_ERROR_FLAG">
            <summary>
            Флаг ошибки, добавляемый устройством к коду функции запроса, при ошибке.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_COIL_STATUS">
            <summary>
            Стандартная modbus функция FC01 - чтение одного/нескольких флагов (coils).
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_DISCRETE_INPUTS">
            <summary>
            Стандартная modbus функция FC02 - чтение одного/нескольких флагов (discrete inputs).
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_HOLDING_REGISTERS">
            <summary>
            Стандартная modbus функция FC03 - чтение одного/нескольких регистров хранения.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_INPUT_REGISTERS">
            <summary>
            Стандартная modbus функция FC04 - чтение одного/нескольких входных регистров.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_WRITE_SINGLE_COIL">
            <summary>
            Стандартная modbus функция FC05 - запись значения одного флага (coil).
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_WRITE_SINGLE_REGISTER">
            <summary>
            Стандартная modbus функция FC06 - запись значения одного регистра хранения.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_EXCEPTION_STATUS">
            <summary>
            Стандартная modbus функция FC07 - чтение кода ошибки.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAGNOSTICS">
            <summary>
            Стандартная modbus функция FC08 - диагностика устройства.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_GET_COMM_EVENT_COUNTER">
            <summary>
            Стандартная modbus функция FC11 - чтение слова состояния и количества событий в журнале.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_GET_COMM_EVENT_LOG">
            <summary>
            Стандартная modbus функция FC12 - чтение записей событий из журнала.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_WRITE_MULTIPLE_COILS">
            <summary>
            Стандартная modbus функция FC15 - запись значений нескольких флагов (coils).
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_WRITE_MULTIPLE_REGISTER">
            <summary>
            Стандартная modbus функция FC16 - запись значений нескольких регистров хранения.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_REPORT_SLAVE_ID">
            <summary>
            Стандартная modbus функция FC17 - чтение описания типа, текущего состояния и другой информации, 
            специфичной для конкретного устройства.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_FILE_RECORD">
            <summary>
            Стандартная modbus функция FC20 - чтение массива записей из файла.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_WRITE_FILE_RECORD">
            <summary>
            Стандартная modbus функция FC21 - зфписб массива записей в файл.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_MASK_WRITE_REGISTER">
            <summary>
            Стандартная modbus функция FC22 - модификация значения регистра с помощью масок.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READWRITE_MULTIPLE_REGS">
            <summary>
            Стандартная modbus функция FC23 - комбинация чтения и записи нескольких регистров в одной транзакции.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_FIFO_QUEUE">
            <summary>
            Стандартная modbus функция FC24 - чтение содержимого очереди регистров в порядке очереди (FIFO).
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_DEVICE_ID">
            <summary>
            Стандартная modbus функция FC43 - чтение идентификатор устройства.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_MEI_TYPE_CAN_OPEN">
            <summary>
            Стандартная modbus функция SF13 - подфункция функции FC43.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_MEI_TYPE_DEVICE_ID">
            <summary>
            Стандартная modbus функция SF14 - подфункция функции FC43.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_ID_CODE_BASIC">
            <summary>
            Стандартная modbus функция SF01 - подфункция функции FC43.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_ID_CODE_REGULAR">
            <summary>
            Стандартная modbus функция SF02 - подфункция функции FC43.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_ID_CODE_EXTENDED">
            <summary>
            Стандартная modbus функция SF03 - подфункция функции FC43.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_ID_CODE_SPECIFIC">
            <summary>
            Стандартная modbus функция SF04 - подфункция функции FC43.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_READ_ID_OBJECT_ID">
            <summary>
            Стандартная modbus функция SF00 - подфункция функции FC43.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_QUERY_DATA">
            <summary>
            Стандартная modbus функция SF00 - подфункция функции FC08.
            Эхо-команда: данные переданные этой командой должны быть возвращены в ответном сообщении.
            ReqDataField:  любое количество любых байт.
            RespDataField: echo ReqDataField.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RESTART_COMM_OPTION">
            <summary>
            Стандартная modbus функция SF01 - подфункция функции FC08.
            Команда реинициализации подсистемы связи подчиненного устройства.
            Все счетчики событий очищаются. Выводит порт из режима "только прослушивание".
            ReqDataField:  0000 - журнал событий не будет очищен
                           FF00 - журнал событий будет очищен
            RespDataField: echo ReqDataField.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_DIAGNOSTIC_REGISTER">
            <summary>
            Стандартная modbus функция SF02 - подфункция функции FC08.
            Получение содержимого диагностического регистра подчиненного устройства.
            ReqDataField:  0000
            RespDataField: содержимого диагностического регистра
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_CHANGE_ASCII_DELIMITER">
            <summary>
            Стандартная modbus функция SF03 - подфункция функции FC08.
            Установка символа разделителя сообщений
            ReqDataField:  новый символ-разделитель
            RespDataField: echo ReqDataField.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_FORCE_LISTEN_ONLY_MODE">
            <summary>
            Стандартная modbus функция SF04 - подфункция функции FC08.
            Переводит подчиненное устройство в режим "только прослушивание" -
            все запросы принимаются и обрабатываются, но ответы на них не отсылаются.
            ReqDataField:  0000
            RespDataField: ----
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_CLEAR_COUNTERS_DIAG_REGS">
            <summary>
            Стандартная modbus функция SF10 - подфункция функции FC08.
            Очистка всех счетчиков и диагностического регистра.
            ReqDataField:  0000
            RespDataField: echo ReqDataField.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_BUS_MESSAGE_COUNT">
            <summary>
            Стандартная modbus функция SF11 - подфункция функции FC08.
            Запрос количества сообщений, обнаруженных подчиненным устройством.
            ReqDataField:  0000
            RespDataField: общее количество сообщений.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_COMM_ERR_COUNT">
            <summary>
            Стандартная modbus функция SF12 - подфункция функции FC08.
            Запрос количества поврежденных сообщений, обнаруженных подчиненным устройством.
            ReqDataField:  0000
            RespDataField: количество запросов с некорректной контрольной суммой.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_EXCEPT_ERR_COUNT">
            <summary>
            Стандартная modbus функция SF13 - подфункция функции FC08.
            Запрос количества ответных сообщений об ошибке.
            ReqDataField:  0000
            RespDataField: количество сообщений об ошибке.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_SLAVE_MESSAGE_COUNT">
            <summary>
            Стандартная modbus функция SF14 - подфункция функции FC08.
            Запрос количества сообщений полученных подчиненным устройством.
            ReqDataField:  0000
            RespDataField: количество сообщений.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_SLAVE_NORESP_COUNT">
            <summary>
            Стандартная modbus функция SF15 - подфункция функции FC08.
            Запрос количества сообщений, на которые не был отправлен ответ.
            ReqDataField:  0000
            RespDataField: количество сообщений.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_SLAVE_NAK_COUNT">
            <summary>
            Стандартная modbus функция SF16 - подфункция функции FC08.
            Запрос количества сообщений, на которые был потправлен ответ NAK.
            ReqDataField:  0000
            RespDataField: количество сообщений.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_SLAVE_BUSY_COUNT">
            <summary>
            Стандартная modbus функция SF17 - подфункция функции FC08.
            Запрос количества сообщений, на которые был потправлен ответ BUSY.
            ReqDataField:  0000
            RespDataField: количество сообщений.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_RETURN_BUS_CHAR_OVERRUN">
            <summary>
            Стандартная modbus функция SF18 - подфункция функции FC08.
            Запрос количества сообщений, необработанных из-за переполнения.
            ReqDataField:  0000
            RespDataField: количество сообщений.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.MB_DIAG_CLEAR_OVERRUN_COUNTER_FLAG">
            <summary>
            Стандартная modbus функция SF20 - подфункция функции FC08.
            Очищистка счетчика ошибок переполнения и сброс флага ошибки.
            ReqDataField:  0000
            RespDataField: echo ReqDataField.
            </summary>
        </member>
        <member name="T:UModbus.Client.ModbusClient.TransferResponse">
            <summary>
            Тип ответа на запрос.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.TransferResponse.Status">
            <summary>
            Статус ответа.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusClient.TransferResponse.Data">
            <summary>
            Блок данных.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusClient.SaveToLogFile(System.String,System.Int32,System.Byte[])">
            <summary>
            Дописывет HEX-представление массива байт в файл LogFileName.
            </summary>
            <param name="prefix">Метка пакета.</param>
            <param name="length">Количество байт, которые следует записать в файл.</param>
            <param name="data">Массив записываемых байт.</param>
        </member>
        <member name="M:UModbus.Client.ModbusClient.TransferPDU(System.Byte[])">
            <summary>
            Отправляет PDU запроса через транспортный уровень, 
            определенный в конкретной реализации клиента
            и возвращает PDU ответного пакета.
            </summary>
            <param name="data">Protocol Data Unit</param>
            <returns>Protocol Data Unit.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.CheckResponse(UModbus.Client.ModbusClient.TransferResponse,System.Byte,System.Func{System.Byte[],System.Boolean})">
            <summary>
            Проверка ответа на корректность.
            </summary>
            <param name="response">Ответ, полученный от подчиненного Modbus устройства, который необходимо проверить.</param>
            <param name="function">Функциональный код, использованный в запросе.</param>
            <param name="CheckLength">Функция проверки коррекности длины ответа для данного типа запроса.</param>
            <returns></returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadBits(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            Обобщенная функция чтения одного/нескольких флагов (Coils/DiscreteInputs).
            </summary>
            <param name="function">Код функции Modbus FC01/FC02.</param>
            <param name="address">Адрес первого флага.</param>
            <param name="count">Количество считываемых флагов.</param>
            <returns>Массив значений флагов.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadWords(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            Обобщенная функция чтения одного/нескольких регистров (HoldingRegisters/InputRegisters).
            </summary>
            <param name="function">Код функции Modbus FC03/FC04.</param>
            <param name="address">Адрес первого регистра.</param>
            <param name="count">Количество считываемых регистров.</param>
            <returns>Массив значений регистров.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadDeviceIdentification(System.Byte)">
            <summary>
            Чтение информации об устройстве.
            </summary>
            <param name="IdCode">Код подфункции Modbus SFC01/SFC02 функции FC43.</param>
            <returns>Массив строк описания.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.#ctor">
            <summary>
            Инициализирует новый экземпляр класса ModbusClient.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusClient.SlaveAddress">
            <summary>
            Задает/возвращает Modbus-адрес устройства в сети.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusClient.Timeout">
            <summary>
            Задает/возвращает время в течении которого следует ждать ответ от устройства в мс.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusClient.LoggingEnable">
            <summary>
            Задает/возвращает разрешение записи данных запросов и ответов на них в файл.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusClient.LogFileName">
            <summary>
            Задает/возвращает имя файла лога.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusClient.IsConnected">
            <summary>
            Возвращает статус соединения транспортного уровня.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusClient.Connect">
            <summary>
            Инициирует соединение транспортного уровня.
            </summary>
            <returns>статус соединения транспортного уровня.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.Disconnect">
            <summary>
            Закрывает соединение транспортного уровня.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadCoils(System.UInt16,System.UInt16)">
            <summary>
            FC01 - чтение одного/нескольких флагов (ciols).
            </summary>
            <param name="address">Адрес первого флага.</param>
            <param name="count">Количество считываемых флагов.</param>
            <returns>Массив значений флагов.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadDiscreteInputs(System.UInt16,System.UInt16)">
            <summary>
            FC02 - чтение одного/нескольких флагов (discrete inputs).
            </summary>
            <param name="address">Адрес первого флага.</param>
            <param name="count">Количество считываемых флагов.</param>
            <returns>Массив значений флагов.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadHoldingRegisters(System.UInt16,System.UInt16)">
            <summary>
            FC03 - чтение одного/нескольких регистров хранения.
            </summary>
            <param name="address">Адрес первого регистра.</param>
            <param name="count">Количество считываемых регистров.</param>
            <returns>Массив значений регистров.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadInputRegisters(System.UInt16,System.UInt16)">
            <summary>
            FC04 - чтение одного/нескольких входных регистров.
            </summary>
            <param name="address">Адрес первого регистра.</param>
            <param name="count">Количество считываемых регистров.</param>
            <returns>Массив значений регистров.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.WriteSingleCoil(System.UInt16,System.Boolean)">
            <summary>
            FC05 - запись значения одного флага (coil).
            </summary>
            <param name="address">Адрес записываемого флага.</param>
            <param name="coil">Значение записываемого флага.</param>
            <returns>Количество записаных флагов.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.WriteSingleRegister(System.UInt16,System.UInt16)">
            <summary>
            FC06 - запись значения одного регистра хранения.
            </summary>
            <param name="address">Адрес записываемого регистра.</param>
            <param name="register">Значение записываемого регистра.</param>
            <returns>Количество записаных регистров.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadExceptionStatus">
            <summary>
            FC07 - чтение кода ошибки.
            </summary>
            <returns>Код ошибки от 0 до 255.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.Diagnostics(System.UInt16,System.Byte[])">
            <summary>
            FC08 - диагностика починенного устройства.
            </summary>
            <param name="SubFunction">Подфункция диагностики.</param>
            <param name="data">Данные (в зависимости от подфункции).</param>
            <returns>Данные (в зависимости от подфункции).</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.GetCommEventCounter">
            <summary>
            FC11 - чтение слова состояния и количества событий починенного устройства.
            </summary>
            <returns>Слово состояния и количество событий.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.GetCommEventLog">
            <summary>
            FC12 - чтение записей журнала событий починенного устройства.
            </summary>
            <returns>Массив до 64-х записей.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.WriteMultipleCoils(System.UInt16,System.Boolean[])">
            <summary>
            FC15 - запись нескольких значений флагов (coils).
            </summary>
            <param name="address">Адрес первого записываемого флага.</param>
            <param name="coils">Значения записываемых флагов.</param>
            <returns>Количество записаных флагов.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.WriteMultipleRegisters(System.UInt16,System.UInt16[])">
            <summary>
            FC16 - запись нескольких значений регистров хранения.
            </summary>
            <param name="address">Адрес первого записываемого регистра.</param>
            <param name="registers">Значения записываемых регистров.</param>
            <returns>Количество записаных регистров.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReportSlaveId">
            <summary>
            FC17 - чтение описания типа, текущего состояния и другой информации об устройстве.
            </summary>
            <returns>Данные, структура которых специфична для конкретного устройства.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadFileRecord(UModbus.Client.FileRecordSubReq[])">
            <summary>
            FC20 - чтение массива записей из файла.
            </summary>
            <param name="SubRequests">Массив под-запросов(файл,запись и ее длина).</param>
            <returns>Значения прочитанных записей.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.WriteFileRecord(UModbus.Client.FileRecord[])">
            <summary>
            FC21 - запись массива записей в файл.
            </summary>
            <param name="records">Массив записей.</param>
            <returns>Количество записанных записей.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.MaskWriteRegister(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            FC22 - модификация значения регистра хранения.
            reg = (reg &amp; and) | (or &amp; ~and).
            </summary>
            <param name="address">Адрес модифицируемого регистра.</param>
            <param name="and">Маска "И".</param>
            <param name="or">Маска "ИЛИ".</param>
            <returns>Количество модифицированных регистров (1/0).</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadWriteMultipleRegisters(System.UInt16,System.UInt16,System.UInt16,System.UInt16[])">
            <summary>
            FC23 - комбинация чтения и записи нескольких регистров в одной транзакции.
            </summary>
            <param name="ReadAddress">Адрес первого считываемого регистра.</param>
            <param name="ReadCount">Количество считываемых регистров.</param>
            <param name="WriteAddress">Адрес первого записываемого регистра.</param>
            <param name="WriteData">Значения записываемых регистров.</param>
            <returns>Массив считанных значений регистров.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadFifoQueue(System.UInt16)">
            <summary>
            FC24 - чтение содержимого очереди регистров в порядке очереди (FIFO).
            </summary>
            <param name="pointer">Указатель на запись в очереди.</param>
            <returns>Данные в очереди (до 32 регистров).</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadDeviceInfoBasic">
            <summary>
            FC43/01 - Чтение базовой информации об устройстве.
            </summary>
            <returns>Массив строк описания.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.ReadDeviceInfoComplete">
            <summary>
            FC43/02 - Чтение полной информации об устройстве.
            </summary>
            <returns>Массив строк описания.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusClient.UserRequest(System.Byte,System.Byte[])">
            <summary>
            Пользовательский запрос с функцией function.
            </summary>
            <param name="function">Код функции пользовательского запроса.</param>
            <param name="parameters">Параметры, определенные структурой пользовательской функции.</param>
            <returns>Ответный блок "сырых" данных.</returns>
        </member>
        <member name="T:UModbus.Client.ModbusSerialClient">
            <summary>
            Базовый класс Modbus-клиента. 
            Реализует взаимодействие с подчиненными устройствами
            по протоколу Modbus через последовательный порт (RTU/ASCII).
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusSerialClient._Uart">
            <summary>
            Последовательный порт, через который устанавливается связь с подчиненным Modbus-устройством.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusSerialClient._CorrectCrc">
            <summary>
            Корректное значение контрольной суммы для конкретного протокола (RTU/ASCII).
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusSerialClient._CrcLength">
            <summary>
            Длина контрольной суммы в байтах для конкретного протокола (RTU/ASCII).
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusSerialClient.CheckSum(System.Byte[])">
            <summary>
            Вычисляет контрольную сумму пакета.
            </summary>
            <param name="data">Пакет данных.</param>
            <returns>16битная контрольная сумма.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusSerialClient.TransferADU(System.Byte[])">
            <summary>
            Отправляет ADU запроса через канальный уровень, 
            определенный в конкретной реализации клиента
            и возвращает ADU ответного пакета.
            </summary>
            <param name="data">Application Data Unit.</param>
            <returns>Application Data Unit.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusSerialClient.TransferPDU(System.Byte[])">
            <summary>
            Реализация приема/передачи пакетов транспортного уровня.
            </summary>
            <param name="data">Отправляемый пакет.</param>
            <returns>Возвращаемый ответ.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusSerialClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса ModbusSerialClient
            </summary>
            <param name="PhysicalAddress">
            Строковое задание физического адреса например: "COM1:9600:8N1".
            При некорректном значении физического адреса будет использовано 
            значение по умолчанию COM1:9600:8N1.
            Значение DataBits фиксировано и равно 8, другие значения считаются ошибкой.
            </param>
        </member>
        <member name="P:UModbus.Client.ModbusSerialClient.Port">
            <summary>
            Задает/возвращает имя последовательного порта.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusSerialClient.Baudrate">
            <summary>
            Задает/возвращает скорсть последовательного порта.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusSerialClient.Parity">
            <summary>
            Задает/возвращает контроль четности последовательного порта.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusSerialClient.StopBits">
            <summary>
            Задает/возвращает количество стоп-битов последовательного порта.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusSerialClient.IsConnected">
            <summary>
            Возвращает статус соединения по последовательному порту.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusSerialClient.Connect">
            <summary>
            Устанавливает соединение по последовательному порту.
            </summary>
            <returns>Cтатус соединения по последовательному порту.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusSerialClient.Disconnect">
            <summary>
            Закрывает соединение по последовательному порту.
            </summary>
        </member>
        <member name="T:UModbus.Client.ModbusIpClient">
            <summary>
            Базовый класс Modbus-клиента.
            Реализует взаимодействие с подчиненными устройствами
            по протоколу Modbus через IP (TCP/UDP).
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusIpClient.IP_HEADER_LENGTH">
            <summary>
            Длина заголовка Modbus пакета внутри TCP/UDP пакета.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusIpClient.IP_PROTOCOL">
            <summary>
            Идентификатор протокола Modbus поверх TCP/UDP.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusIpClient._TransactionId">
            <summary>
            Идентификатор транзакции. Инкрементируется с каждым запросом.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusIpClient.TransferADU(System.Byte[])">
            <summary>
            Отправляет ADU запроса через канальный уровень, 
            определенный в конкретной реализации клиента
            и возвращает ADU ответного пакета.
            </summary>
            <param name="data">Application Data Unit.</param>
            <returns>Application Data Unit.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusIpClient.TransferPDU(System.Byte[])">
            <summary>
            Реализация приема/передачи пакетов транспортного уровня.
            </summary>
            <param name="data">отправляемый пакет.</param>
            <returns>Возвращаемый ответ.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusIpClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса ModbusIpClient
            </summary>
            <param name="PhysicalAddress">
            Строковое задание физического адреса например: "192.168.1.100:502"
            При некорректном значении физического адреса будет использовано 
            значение по умолчанию 127.0.0.1:502
            </param>
        </member>
        <member name="P:UModbus.Client.ModbusIpClient.IpAddress">
            <summary>
            Задает/возвращает IP адрес устройства.
            </summary>
        </member>
        <member name="P:UModbus.Client.ModbusIpClient.Port">
            <summary>
            Задает/возвращает TCP/IP или UDP/IP порт устройства.
            </summary>
        </member>
        <member name="T:UModbus.Client.ModbusRtuClient">
            <summary>
            Реализует методы для работы с ModbusRTU устройствами через последовательный порт.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusRtuClient.CRC16_POLYNOM">
            <summary>
            Полином алгоритма контрольной суммы CRC16.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusRtuClient.CRC16_INITIAL">
            <summary>
            Начальное значение вычисляемой контрольной суммы CRC16.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusRtuClient.RESP_BUFFER_SIZE">
            <summary>
            Размер входного буффера для приема ответа от подчиненного Modbus устройства.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusRtuClient.CheckSum(System.Byte[])">
            <summary>
            Реализация контрольной вычисления суммы CRC16.
            </summary>
            <param name="data">Пакет данных.</param>
            <returns>16-битная контрольная сумма.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusRtuClient.TransferADU(System.Byte[])">
            <summary>
            Отправляет ADU запроса через последовательный порт,
            и возвращает ADU ответного пакета.
            </summary>
            <param name="data">Application Data Unit.</param>
            <returns>Application Data Unit.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusRtuClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса ModbusRtuClient
            </summary>
            <param name="PhysicalAddress">
            Строковое задание физического адреса например: "COM1:9600:8N1".
            При некорректном значении физического адреса будет использовано 
            значение по умолчанию COM1:9600:8N1.
            Значение DataBits фиксировано и равно 8, другие значения считаются ошибкой.
            </param>
        </member>
        <member name="T:UModbus.Client.ModbusAsciiClient">
            <summary>
            Реализует методы для работы с ModbusASCII устройствами через последовательный порт.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusAsciiClient.ASCII_START_SIZE">
            <summary>
            Размер стартовой последовательности в байтах.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusAsciiClient.ASCII_BYTE_SIZE">
            <summary>
            Размер в байтах одного закодированного байта.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusAsciiClient.ASCII_STOP_SIZE">
            <summary>
            Размер стоповой последовательности в байтах.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusAsciiClient.ASCII_START_MARK">
            <summary>
            Маркер начала пакета.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusAsciiClient.ASCII_STOP1_MARK">
            <summary>
            Маркер конца пакета.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusAsciiClient.RESP_BUFFER_SIZE">
            <summary>
            Размер входного буффера для приема ответа от подчиненного Modbus устройства.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusAsciiClient.TetradeEncode(System.Byte)">
            <summary>
            Преобразование младшей тетрады входного байта tetrade в его ASCII изображение.
            </summary>
            <param name="tetrade">Тетрада байта, которую неоходимо закодировать.</param>
            <returns>Код символа ASCII, соответствующий входным данным.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusAsciiClient.TetradeDecode(System.Byte)">
            <summary>
            Преобразование ASCII изображения терады закодированного байта в значение тетрады.
            </summary>
            <param name="tetrade">Код ASCII символа, тетрады закодированного байта.</param>
            <returns>Значение тетрады, соответствующее входным данным.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusAsciiClient.CheckSum(System.Byte[])">
            <summary>
            Реализация контрольной вычисления суммы CRC8.
            </summary>
            <param name="data">пакет данных.</param>
            <returns>8битная контрольная сумма, каждая тетрада которой закодирована ASCII кодами.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusAsciiClient.TransferADU(System.Byte[])">
            <summary>
            Отправляет ADU запроса через последовательный порт, и возвращает ADU ответного пакета.
            </summary>
            <param name="data">Application Data Unit.</param>
            <returns>Application Data Unit.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusAsciiClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса ModbusRtuClient
            </summary>
            <param name="PhysicalAddress">
            Строковое задание физического адреса например: "COM1:9600:8N1".
            При некорректном значении физического адреса будет использовано 
            значение по умолчанию COM1:9600:8N1.
            Значение DataBits фиксировано и равно 8, другие значения считаются ошибкой.
            </param>
        </member>
        <member name="T:UModbus.Client.ModbusTcpClient">
            <summary>
            Реализует методы для работы с ModbusTCP устройствами через TCP/IP стек.
            </summary>
        </member>
        <member name="F:UModbus.Client.ModbusTcpClient.RESP_BUFFER_SIZE">
            <summary>
            Размер входного буффера для приема ответа от подчиненного Modbus устройства.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusTcpClient.TransferADU(System.Byte[])">
            <summary>
            Отправляет ADU запроса через TCP/IP стек, и возвращает ADU ответного пакета.
            </summary>
            <param name="data">Application Data Unit.</param>
            <returns>Application Data Unit.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusTcpClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса ModbusTcpClient
            </summary>
            <param name="PhysicalAddress">
            Строковое задание физического адреса например: "192.168.1.100:502"
            При некорректном значении физического адреса будет использовано 
            значение по умолчанию 127.0.0.1:502
            </param>
        </member>
        <member name="P:UModbus.Client.ModbusTcpClient.IsConnected">
            <summary>
            Возвращает статус TCP соединения.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusTcpClient.Connect">
            <summary>
            Устанавливает TCP соединение с устройством по указанному IP адресу.
            </summary>
            <returns>Статус соединения.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusTcpClient.Disconnect">
            <summary>
            Закрывает TCP соединение.
            </summary>
        </member>
        <member name="T:UModbus.Client.ModbusUdpClient">
            <summary>
            Реализует методы для работы с ModbusUDP устройствами через UDP/IP стек.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusUdpClient.TransferADU(System.Byte[])">
            <summary>
            Отправляет ADU запроса через UDP/IP стек, и возвращает ADU ответного пакета.
            </summary>
            <param name="data">Application Data Unit.</param>
            <returns>Application Data Unit.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusUdpClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса ModbusUdpClient
            </summary>
            <param name="PhysicalAddress">
            Строковое задание физического адреса например: "192.168.1.100:502"
            При некорректном значении физического адреса будет использовано 
            значение по умолчанию 127.0.0.1:502
            </param>
        </member>
        <member name="P:UModbus.Client.ModbusUdpClient.IsConnected">
            <summary>
            Возвращает статус UDP соединения.
            </summary>
        </member>
        <member name="M:UModbus.Client.ModbusUdpClient.Connect">
            <summary>
            Устанавливает UDP соединение с устройством по указанному IP адресу.
            </summary>
            <returns>Cтатус соединения.</returns>
        </member>
        <member name="M:UModbus.Client.ModbusUdpClient.Disconnect">
            <summary>
            Закрывает UDP соединение.
            </summary>
        </member>
    </members>
</doc>
